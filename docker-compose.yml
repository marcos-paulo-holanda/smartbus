#version: '3.7'

services:
  ############################
  ##  DATA LAKE
  ############################
  minio:
    image: minio/minio:latest
    platform: linux/amd64
    container_name: minio
    entrypoint: sh
    command:   '-c ''mkdir -p /minio_data/raw && mkdir -p /minio_data/trusted && minio server /minio_data --console-address ":9001"'''
    ports:
      - "9050:9000"
      - "9051:9001"
    hostname: minio
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_ACCESS_KEY: datalake
      MINIO_SECRET_KEY: datalake
    volumes:
      - ./minio/data1:/data

  namenode:
    image: fjardim/mds-namenode
    platform: linux/amd64
    container_name: namenode
    hostname: namenode
    volumes:
      - ./hadoop/hdfs/namenode:/hadoop/dfs/name
      - ./hadoop/util:/util
    env_file:
      - ./hadoop/hadoop.env
    ports:
      - "9870:9870"
    deploy:
      resources:
        limits:
          memory: 500m
  
  datanode:
    image: fjardim/mds-datanode
    platform: linux/amd64
    container_name: datanode
    hostname: datanode
    volumes:
      - ./hadoop/hdfs/datanode:/hadoop/dfs/data
      - ./hadoop/util:/util
    env_file:
      - ./hadoop/hadoop.env
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    depends_on:
      - namenode
    ports:
      - "9865:9864"
    deploy:
      resources:
        limits:
          memory: 500m

  ############################
  ## DATABASE
  ############################
      
  db:
    image: postgres:16
    platform: linux/amd64
    container_name: db
    hostname: db
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: admin
    command: postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all -c max_connections=200 -c wal_level=logical
    ports:
      - 15432:5432
    volumes:
      - ./postgres/volume:/var/lib/postgresql/data
      - ./util:/util 

  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   container_name: pgadmin
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: lab-pgadmin4@pgadmin.org
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   ports:
  #     - "5050:80"
  #   depends_on:
  #     - db       

  hive:
    hostname: hive
    #image: apache/hive:4.0.0-beta-1
    image: fjardim/mds-hive
    container_name: hive
    environment:
      AWS_ACCESS_KEY_ID: datalake
      AWS_SECRET_ACCESS_KEY: datalake
      HIVE_CUSTOM_CONF_DIR: "/hive_custom_conf"
      SERVICE_NAME: hiveserver2
      SERVICE_OPTS: "-Dhive.metastore.uris=thrift://metastore:9083" 
      IS_RESUME: "true"
      #HIVE_VERSION: "3.1.3"
    ports:
       - "10000:10000"
       - "10002:10002"
    depends_on:
      - metastore
    user: root
    volumes:
       - ./hive/conf:/hive_custom_conf
       - ./util:/util
  
  metastore:
    hostname: metastore
    platform: linux/amd64
    image: fjardim/mds-hive-metastore
    #image: apache/hive:4.0.0-beta-1
    container_name: metastore
    environment:
      AWS_ACCESS_KEY_ID: datalake
      AWS_SECRET_ACCESS_KEY: datalake
      HIVE_CUSTOM_CONF_DIR: "/hive_custom_conf"
      SERVICE_NAME: metastore
      #SERVICE_OPTS: "-Dhive.metastore.uris=thrift://metastore:9083" 
      IS_RESUME: "true"
      DB_DRIVER: postgres 
      SERVICE_OPTS: "-Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://db:5432/metastore -Djavax.jdo.option.ConnectionUserName=admin -Djavax.jdo.option.ConnectionPassword=admin" 
    ports:
       - "9083:9083"
    depends_on:
        - db
    user: root
    volumes:
       - ./hive/meta:/opt/hive/data/warehouse 
       - ./hive/conf:/hive_custom_conf
       - ./util:/util

  ############################
  ## INGESTAO
  ############################
  nifi:
    image: apache/nifi:latest
    platform: linux/amd64
    container_name: nifi
    hostname: nifi
    volumes:
      - ./nifi/util:/util
      - ./nifi/drivers:/opt/nifi/nifi-current/custom-libs
    environment:
      NIFI_WEB_HTTP_PORT: "9090"
      NIFI_WEB_HTTPS_HOST: "nifi"
      NIFI_JAVA_OPTS: "-Djava.ext.dirs=/opt/nifi/nifi-current/custom-libs"
      TZ: "America/Sao_Paulo"
    command: >
      sh -c "ln -snf /usr/share/zoneinfo/$$TZ /etc/localtime && echo $$TZ > /etc/timezone"
    
    ports:
      - 49090:9090
    deploy:
      resources:
        limits:
          memory: 2g
          #cpus: '0.2'

  ##################################################
  ### ANALISE E PROCESSAMENTO
  ##################################################
  spark-master:
    image: fjardim/mds-spark
    platform: linux/amd64
    hostname: spark-master
    container_name: spark-master
    command: 
      - /bin/sh
      - -c
      - |
        /usr/local/spark/sbin/start-master.sh
        start-notebook.sh --NotebookApp.token=''
    ports:
      - 8889:8888
      - 4040:4040
      - 4041:4041
      - 4042:4042
      - 4043:4043
      - 38080:8080
      - 7077:7077
    volumes:
      - ./spark/work:/home/user 
      - ./spark/env:/env 
      - ./util:/util
    deploy:
      resources:
        limits:
          memory: 2g

  spark-worker:
    image: fjardim/mds-spark
    platform: linux/amd64
    hostname: spark-worker
    container_name: spark-worker
    command: 
      - /bin/sh
      - -c
      - |
        /usr/local/spark/sbin/start-worker.sh spark-master:7077
        start-notebook.sh --NotebookApp.token='' 
    #command: /usr/local/spark/sbin/start-worker.sh jupyter-spark:7077
    
    env_file:
      - ./spark/env/jupyter.env
    ports:
      - 5040:4040
      - 5041:4041
      - 5042:4042
      - 5043:4043
      - 38081:8081
      - 36533:36533
    volumes:
      - ./util:/util
      - ./spark/work:/home/user 
    environment:
      SPARK_MASTER: spark-master
      PYSPARK_SUBMIT_ARGS: "--packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.3.0,org.apache.hadoop:hadoop-aws:3.3.1,com.amazonaws:aws-java-sdk-bundle:1.12.392"

    depends_on:
        - spark-master
    deploy:
      resources:
        limits:
          memory: 1g

networks:
  datalab:
    driver: bridge
